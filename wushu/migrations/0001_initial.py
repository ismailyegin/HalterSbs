# Generated by Django 2.2.4 on 2020-04-26 14:39

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Competition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('compType', models.IntegerField(blank=True, choices=[('Üniversiteler Arası', 'Üniversiteler Arası'), ('Okullar Arası', 'Okullar Arası'), ('Ferdi', 'Ferdi')], db_column='compType', null=True)),
                ('creationDate', models.DateTimeField(blank=True, db_column='creationDate', null=True)),
                ('finishDate', models.DateTimeField(blank=True, db_column='finishDate', null=True)),
                ('kobilId', models.IntegerField(db_column='kobilId')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('operationDate', models.DateTimeField(blank=True, db_column='operationDate', null=True)),
                ('startDate', models.DateTimeField(blank=True, db_column='startDate', null=True)),
                ('eventPlace', models.CharField(blank=True, db_column='eventPlace', max_length=45, null=True)),
                ('eventDate', models.CharField(blank=True, db_column='eventDate', max_length=45, null=True)),
                ('juryCount', models.IntegerField(blank=True, db_column='juryCount', null=True)),
                ('compGeneralType', models.IntegerField(blank=True, choices=[('Türkiye', 'Türkiye'), ('Dünya', 'Dünya'), ('Olimpiyat', 'Olimpiyat'), ('Avrupa', 'Avrupa')], db_column='compGeneralType', null=True)),
                ('eskimi', models.IntegerField(blank=True, null=True)),
                ('isOpen', models.IntegerField(blank=True, db_column='isOpen', null=True)),
                ('registerStartDate', models.DateTimeField(blank=True, db_column='registerStartDate', null=True)),
                ('registerFinishDate', models.DateTimeField(blank=True, db_column='registerFinishDate', null=True)),
            ],
            options={
                'db_table': 'competition',
                'managed': False,
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='Athlete',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creationDate', models.DateTimeField(auto_now_add=True)),
                ('modificationDate', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['pk'],
            },
        ),
        migrations.CreateModel(
            name='Branch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=120, null=True, verbose_name='Branş Adı')),
                ('creationDate', models.DateTimeField(auto_now_add=True)),
                ('modificationDate', models.DateTimeField(auto_now=True)),
            ],
            options={
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='CategoryItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('forWhichClazz', models.CharField(max_length=255)),
                ('creationDate', models.DateTimeField(auto_now_add=True)),
                ('modificationDate', models.DateTimeField(auto_now=True)),
                ('branch', models.CharField(blank=True, choices=[('AIKIDO', 'AIKIDO'), ('WING CHUN', 'WING CHUN'), ('WUSHU', 'WUSHU'), ('KYOKUSHIN ASHIHARA', 'KYOKUSHIN ASHIHARA'), ('JEET KUNE DO KULELKAVIDO', 'JEET KUNE DO KULELKAVIDO')], max_length=128, null=True, verbose_name='Seçiniz')),
                ('isFirst', models.BooleanField()),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='wushu.CategoryItem')),
            ],
            options={
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(blank=True, null=True, verbose_name='Şehir')),
            ],
            options={
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='ClubRole',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(blank=True, null=True, verbose_name='Kulüp Üye Rolü')),
            ],
            options={
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='Coach',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creationDate', models.DateTimeField(auto_now_add=True)),
                ('modificationDate', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['pk'],
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='Communication',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('postalCode', models.CharField(blank=True, max_length=120, null=True)),
                ('phoneNumber', models.CharField(blank=True, max_length=120, null=True)),
                ('phoneNumber2', models.CharField(blank=True, max_length=120, null=True)),
                ('address', models.TextField(blank=True, null=True, verbose_name='Adres')),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='wushu.City', verbose_name='İl')),
            ],
            options={
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(blank=True, null=True, verbose_name='Ülke')),
            ],
            options={
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='DirectoryCommission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(verbose_name='Kurul Adı')),
            ],
            options={
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='DirectoryMemberRole',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(verbose_name='Üye Rolü')),
            ],
            options={
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='Judge',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creationDate', models.DateTimeField(auto_now_add=True)),
                ('modificationDate', models.DateTimeField(auto_now=True)),
                ('communication', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='wushu.Communication')),
            ],
            options={
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tc', models.CharField(blank=True, max_length=120, null=True)),
                ('height', models.CharField(blank=True, max_length=120, null=True)),
                ('weight', models.CharField(blank=True, max_length=120, null=True)),
                ('birthplace', models.CharField(blank=True, max_length=120, null=True, verbose_name='Doğum Yeri')),
                ('motherName', models.CharField(blank=True, max_length=120, null=True, verbose_name='Anne Adı')),
                ('fatherName', models.CharField(blank=True, max_length=120, null=True, verbose_name='Baba Adı')),
                ('profileImage', models.ImageField(blank=True, default='profile/user.png', null=True, upload_to='profile/', verbose_name='Profil Resmi')),
                ('birthDate', models.DateField(blank=True, null=True, verbose_name='Doğum Tarihi')),
                ('bloodType', models.CharField(choices=[('AB Rh+', 'AB Rh+'), ('AB Rh-', 'AB Rh-'), ('A Rh+', 'A Rh+'), ('A Rh-', 'A Rh-'), ('B Rh+', 'B Rh+'), ('B Rh-', 'B Rh-'), ('AB Rh+', '0 Rh+'), ('AB Rh+', '0 Rh-')], default='AB Rh+', max_length=128, verbose_name='Kan Grubu')),
                ('gender', models.CharField(choices=[('Erkek', 'Erkek'), ('Kadın', 'Kadın')], default='Erkek', max_length=128, verbose_name='Cinsiyeti')),
            ],
            options={
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='Punishment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creationDate', models.DateTimeField(auto_now_add=True)),
                ('modificationDate', models.DateTimeField(auto_now=True)),
                ('startDate', models.DateTimeField()),
                ('expireDate', models.DateTimeField()),
                ('durationDay', models.IntegerField()),
                ('description', models.CharField(blank=True, max_length=1000, null=True)),
            ],
            options={
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='SimpleCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('categoryName', models.CharField(blank=True, max_length=255, null=True)),
                ('compCategoryCompleted', models.BooleanField(blank=True, null=True)),
                ('compOrder', models.IntegerField(blank=True, null=True)),
                ('creationDate', models.DateTimeField(auto_now_add=True)),
                ('isDuilian', models.BooleanField(blank=True, null=True)),
                ('kobilId', models.IntegerField(blank=True, null=True)),
                ('operationDate', models.DateTimeField(auto_now_add=True)),
                ('playersOrdered', models.BooleanField(blank=True, null=True)),
                ('recordCompleted', models.BooleanField(blank=True, null=True)),
                ('competition', models.IntegerField(blank=True, null=True)),
                ('area', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='SportClubUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creationDate', models.DateTimeField(auto_now_add=True)),
                ('modificationDate', models.DateTimeField(auto_now=True)),
                ('communication', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='wushu.Communication')),
                ('person', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='wushu.Person')),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='wushu.ClubRole', verbose_name='Üye Rolü')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='VisaSeminar',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creationDate', models.DateTimeField(auto_now_add=True)),
                ('modificationDate', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=1000)),
                ('startDate', models.DateTimeField()),
                ('finishDate', models.DateTimeField()),
                ('location', models.CharField(max_length=1000)),
                ('branch', models.CharField(choices=[('AIKIDO', 'AIKIDO'), ('WING CHUN', 'WING CHUN'), ('WUSHU', 'WUSHU'), ('KYOKUSHIN ASHIHARA', 'KYOKUSHIN ASHIHARA'), ('JEET KUNE DO KULELKAVIDO', 'JEET KUNE DO KULELKAVIDO')], max_length=128, verbose_name='Branş')),
                ('status', models.CharField(choices=[('Onaylandı', 'Onaylandı'), ('Onaya Gönderildi', 'Onaya Gönderildi'), ('Reddedildi', 'Reddedildi'), ('Beklemede', 'Beklemede')], default='Beklemede', max_length=128, verbose_name='Kayıt Durumu')),
                ('forWhichClazz', models.CharField(max_length=255)),
                ('coach', models.ManyToManyField(to='wushu.Coach')),
                ('referee', models.ManyToManyField(to='wushu.Judge')),
            ],
            options={
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='TaoluAthlete',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('athlete', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='wushu.Athlete')),
                ('categori', models.ManyToManyField(to='wushu.SimpleCategory')),
                ('competition', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='wushu.Competition')),
            ],
            options={
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='SportsClub',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=120, null=True)),
                ('shortName', models.CharField(blank=True, max_length=120, null=True)),
                ('foundingDate', models.CharField(blank=True, max_length=120, null=True)),
                ('clubMail', models.CharField(blank=True, max_length=120, null=True)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='club/', verbose_name='Kulüp Logo')),
                ('creationDate', models.DateTimeField(auto_now_add=True)),
                ('modificationDate', models.DateTimeField(auto_now=True)),
                ('isFormal', models.BooleanField(choices=[(True, 'Spor Kulubü'), (False, 'Diger(Özel Salon-Dojo-Sportif Dernek)')], default=True)),
                ('clubUser', models.ManyToManyField(to='wushu.SportClubUser')),
                ('coachs', models.ManyToManyField(to='wushu.Coach')),
                ('communication', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='wushu.Communication')),
            ],
            options={
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='SandaAthlete',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('athlete', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='wushu.Athlete')),
                ('competition', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='wushu.Competition')),
            ],
            options={
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='PreRegistration',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('Onaylandı', 'Onaylandı'), ('Onaya Gönderildi', 'Onaya Gönderildi'), ('Reddedildi', 'Reddedildi'), ('Beklemede', 'Beklemede')], default='Beklemede', max_length=128, verbose_name='Onay Durumu')),
                ('tc', models.CharField(blank=True, max_length=120, null=True)),
                ('height', models.CharField(blank=True, max_length=120, null=True)),
                ('weight', models.CharField(blank=True, max_length=120, null=True)),
                ('birthplace', models.CharField(blank=True, max_length=120, null=True, verbose_name='Doğum Yeri')),
                ('motherName', models.CharField(blank=True, max_length=120, null=True, verbose_name='Anne Adı')),
                ('fatherName', models.CharField(blank=True, max_length=120, null=True, verbose_name='Baba Adı')),
                ('profileImage', models.ImageField(blank=True, default='profile/user.png', null=True, upload_to='profile/', verbose_name='Profil Resmi')),
                ('birthDate', models.DateField(blank=True, null=True, verbose_name='Doğum Tarihi')),
                ('bloodType', models.CharField(choices=[('AB Rh+', 'AB Rh+'), ('AB Rh-', 'AB Rh-'), ('A Rh+', 'A Rh+'), ('A Rh-', 'A Rh-'), ('B Rh+', 'B Rh+'), ('B Rh-', 'B Rh-'), ('AB Rh+', '0 Rh+'), ('AB Rh+', '0 Rh-')], default='AB Rh+', max_length=128, verbose_name='Kan Grubu')),
                ('gender', models.CharField(choices=[('Erkek', 'Erkek'), ('Kadın', 'Kadın')], default='Erkek', max_length=128, verbose_name='Cinsiyeti')),
                ('postalCode', models.CharField(blank=True, max_length=120, null=True)),
                ('phoneNumber', models.CharField(blank=True, max_length=120, null=True)),
                ('phoneNumber2', models.CharField(blank=True, max_length=120, null=True)),
                ('address', models.TextField(blank=True, null=True, verbose_name='Adres')),
                ('name', models.CharField(blank=True, max_length=120, null=True)),
                ('shortName', models.CharField(blank=True, max_length=120, null=True)),
                ('foundingDate', models.DateField(blank=True, max_length=120, null=True, verbose_name='Kuruluş Tarihi')),
                ('clubMail', models.CharField(blank=True, max_length=120, null=True)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='club/', verbose_name='Kulüp Logo')),
                ('creationDate', models.DateTimeField(auto_now_add=True)),
                ('modificationDate', models.DateTimeField(auto_now=True)),
                ('isFormal', models.BooleanField(choices=[(True, 'Spor Kulubü'), (False, 'Diger(Özel Salon-Dojo-Sportif Dernek)')], default=True)),
                ('clubpostalCode', models.CharField(blank=True, max_length=120, null=True)),
                ('clubphoneNumber', models.CharField(blank=True, max_length=120, null=True)),
                ('clubphoneNumber2', models.CharField(blank=True, max_length=120, null=True)),
                ('clubaddress', models.TextField(blank=True, null=True, verbose_name='Adres')),
                ('first_name', models.CharField(blank=True, max_length=30)),
                ('last_name', models.CharField(blank=True, max_length=150)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.')),
                ('is_active', models.BooleanField(default=False, help_text='Designates whether this user should be treated as active. ')),
                ('dekont', models.FileField(upload_to='dekont/', verbose_name='Dekont ')),
                ('petition', models.FileField(upload_to='dekont/', verbose_name='Dilekçe ')),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='wushu.City', verbose_name='İl')),
                ('clubcity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='wushu.City', verbose_name='İl')),
                ('clubcountry', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='wushu.Country', verbose_name='Ülke')),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='wushu.Country', verbose_name='Ülke')),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='wushu.ClubRole', verbose_name='Üye Rolü')),
            ],
            options={
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='MenuReferee',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120, null=True)),
                ('url', models.CharField(blank=True, max_length=120, null=True)),
                ('is_parent', models.BooleanField(default=True)),
                ('is_show', models.BooleanField(default=True)),
                ('fa_icon', models.CharField(blank=True, max_length=120, null=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='wushu.MenuReferee')),
                ('permission', models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='MenuDirectory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120, null=True)),
                ('url', models.CharField(blank=True, max_length=120, null=True)),
                ('is_parent', models.BooleanField(default=True)),
                ('is_show', models.BooleanField(default=True)),
                ('fa_icon', models.CharField(blank=True, max_length=120, null=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='wushu.MenuDirectory')),
                ('permission', models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='MenuCoach',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120, null=True)),
                ('url', models.CharField(blank=True, max_length=120, null=True)),
                ('is_parent', models.BooleanField(default=True)),
                ('is_show', models.BooleanField(default=True)),
                ('fa_icon', models.CharField(blank=True, max_length=120, null=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='wushu.MenuCoach')),
                ('permission', models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='MenuClubUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120, null=True)),
                ('url', models.CharField(blank=True, max_length=120, null=True)),
                ('is_parent', models.BooleanField(default=True)),
                ('is_show', models.BooleanField(default=True)),
                ('fa_icon', models.CharField(blank=True, max_length=120, null=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='wushu.MenuClubUser')),
                ('permission', models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='MenuAthlete',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120, null=True)),
                ('url', models.CharField(blank=True, max_length=120, null=True)),
                ('is_parent', models.BooleanField(default=True)),
                ('is_show', models.BooleanField(default=True)),
                ('fa_icon', models.CharField(blank=True, max_length=120, null=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='wushu.MenuAthlete')),
                ('permission', models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='MenuAdmin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120, null=True)),
                ('url', models.CharField(blank=True, max_length=120, null=True)),
                ('is_parent', models.BooleanField(default=True)),
                ('is_show', models.BooleanField(default=True)),
                ('fa_icon', models.CharField(blank=True, max_length=120, null=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='wushu.MenuAdmin')),
                ('permission', models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='Menu',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120, null=True)),
                ('url', models.CharField(blank=True, max_length=120, null=True)),
                ('is_parent', models.BooleanField(default=True)),
                ('is_show', models.BooleanField(default=True)),
                ('fa_icon', models.CharField(blank=True, max_length=120, null=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='wushu.Menu')),
                ('permission', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='MenuPermission', to='auth.Permission')),
            ],
            options={
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='License',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creationDate', models.DateTimeField(auto_now_add=True)),
                ('modificationDate', models.DateTimeField(auto_now=True)),
                ('branch', models.CharField(choices=[('AIKIDO', 'AIKIDO'), ('WING CHUN', 'WING CHUN'), ('WUSHU', 'WUSHU'), ('KYOKUSHIN ASHIHARA', 'KYOKUSHIN ASHIHARA'), ('JEET KUNE DO KULELKAVIDO', 'JEET KUNE DO KULELKAVIDO')], max_length=128, verbose_name='Branş')),
                ('isActive', models.BooleanField(default=False)),
                ('licenseNo', models.CharField(max_length=255)),
                ('expireDate', models.DateField()),
                ('startDate', models.DateField()),
                ('status', models.CharField(choices=[('Onaylandı', 'Onaylandı'), ('Onaya Gönderildi', 'Onaya Gönderildi'), ('Reddedildi', 'Reddedildi'), ('Beklemede', 'Beklemede')], default='Beklemede', max_length=128, verbose_name='Onay Durumu')),
                ('lisansPhoto', models.FileField(upload_to='lisans/', verbose_name='Lisans')),
                ('reddetwhy', models.CharField(blank=True, max_length=255, null=True)),
                ('cityHeadShip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='wushu.City')),
                ('sportsClub', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='wushu.SportsClub')),
            ],
            options={
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='Level',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('levelType', models.CharField(choices=[('VISA', 'VISA'), ('GRADE', 'GRADE'), ('BELT', 'BELT')], max_length=128, verbose_name='Leveller')),
                ('branch', models.CharField(choices=[('AIKIDO', 'AIKIDO'), ('WING CHUN', 'WING CHUN'), ('WUSHU', 'WUSHU'), ('KYOKUSHIN ASHIHARA', 'KYOKUSHIN ASHIHARA'), ('JEET KUNE DO KULELKAVIDO', 'JEET KUNE DO KULELKAVIDO')], max_length=128, verbose_name='Branş')),
                ('isActive', models.BooleanField(default=False)),
                ('startDate', models.DateField()),
                ('expireDate', models.DateField(blank=True, null=True)),
                ('durationDay', models.IntegerField(blank=True, null=True)),
                ('creationDate', models.DateTimeField(auto_now_add=True)),
                ('modificationDate', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('Onaylandı', 'Onaylandı'), ('Onaya Gönderildi', 'Onaya Gönderildi'), ('Reddedildi', 'Reddedildi'), ('Beklemede', 'Beklemede')], default='Beklemede', max_length=128, verbose_name='Onay Durumu')),
                ('dekont', models.FileField(upload_to='dekont/', verbose_name='Dekont ')),
                ('form', models.FileField(upload_to='form/', verbose_name='Form ')),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='wushu.City', verbose_name='İl')),
                ('definition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='wushu.CategoryItem')),
            ],
            options={
                'default_permissions': (),
            },
        ),
        migrations.AddField(
            model_name='judge',
            name='grades',
            field=models.ManyToManyField(related_name='Judgegrades', to='wushu.Level'),
        ),
        migrations.AddField(
            model_name='judge',
            name='person',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='wushu.Person'),
        ),
        migrations.AddField(
            model_name='judge',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='judge',
            name='visa',
            field=models.ManyToManyField(related_name='Judgevisa', to='wushu.Level'),
        ),
        migrations.CreateModel(
            name='DirectoryMember',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creationDate', models.DateTimeField(auto_now_add=True)),
                ('modificationDate', models.DateTimeField(auto_now=True)),
                ('commission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='wushu.DirectoryCommission', verbose_name='Kurulu')),
                ('communication', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='wushu.Communication')),
                ('person', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='wushu.Person')),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='wushu.DirectoryMemberRole', verbose_name='Üye Rolü')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'default_permissions': (),
            },
        ),
        migrations.AddField(
            model_name='communication',
            name='country',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='wushu.Country', verbose_name='Ülke'),
        ),
        migrations.AddField(
            model_name='coach',
            name='communication',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='wushu.Communication'),
        ),
        migrations.AddField(
            model_name='coach',
            name='grades',
            field=models.ManyToManyField(related_name='CoachGrades', to='wushu.Level'),
        ),
        migrations.AddField(
            model_name='coach',
            name='person',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='wushu.Person'),
        ),
        migrations.AddField(
            model_name='coach',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='coach',
            name='visa',
            field=models.ManyToManyField(related_name='CoachVisa', to='wushu.Level'),
        ),
        migrations.CreateModel(
            name='BeltExam',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creationDate', models.DateTimeField(auto_now_add=True)),
                ('modificationDate', models.DateTimeField(auto_now=True)),
                ('examDate', models.DateField()),
                ('paymentType', models.CharField(choices=[('Banka', 'Banka'), ('Posta', 'Posta')], default='Banka', max_length=128, verbose_name='Ödeme Şekli')),
                ('dekont', models.FileField(upload_to='dekont/', verbose_name='Dekont ')),
                ('dekontDate', models.DateField(blank=True, null=True)),
                ('dekontDescription', models.CharField(blank=True, max_length=255, null=True)),
                ('status', models.CharField(choices=[('Onaylandı', 'Onaylandı'), ('Onaya Gönderildi', 'Onaya Gönderildi'), ('Reddedildi', 'Reddedildi'), ('Beklemede', 'Beklemede')], default='Beklemede', max_length=128, verbose_name='Onay Durumu')),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('branch', models.CharField(choices=[('AIKIDO', 'AIKIDO'), ('WING CHUN', 'WING CHUN'), ('WUSHU', 'WUSHU'), ('KYOKUSHIN ASHIHARA', 'KYOKUSHIN ASHIHARA'), ('JEET KUNE DO KULELKAVIDO', 'JEET KUNE DO KULELKAVIDO')], max_length=128)),
                ('athletes', models.ManyToManyField(to='wushu.Athlete')),
                ('coachs', models.ManyToManyField(to='wushu.Coach')),
                ('sportClub', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='wushu.SportsClub')),
            ],
            options={
                'default_permissions': (),
            },
        ),
        migrations.AddField(
            model_name='athlete',
            name='belts',
            field=models.ManyToManyField(to='wushu.Level'),
        ),
        migrations.AddField(
            model_name='athlete',
            name='communication',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='wushu.Communication'),
        ),
        migrations.AddField(
            model_name='athlete',
            name='licenses',
            field=models.ManyToManyField(to='wushu.License'),
        ),
        migrations.AddField(
            model_name='athlete',
            name='person',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='wushu.Person'),
        ),
        migrations.AddField(
            model_name='athlete',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
    ]
